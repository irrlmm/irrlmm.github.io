---
import { Image } from "astro:assets";
import Svg from "../Svg.astro";
import { SVG_ARROW } from "../../consts/svg";
import { getEntry } from "astro:content";
import type { ReferenceDataEntry } from "astro:content";
import getImage from "../../helpers/getImage";

interface Props {
  timeline: string;
  company: ReferenceDataEntry<"meta:company", string>;
  title: string;
  isCurrent?: boolean;
}

const {
  timeline,
  company: { id },
  title,
  isCurrent,
} = Astro.props;

const company = await getEntry("meta:company", id);

if (!company) {
  return null;
}

const logo = getImage(company.data.logo);
---

<div class="card-header-wrapper">
  <div class="card-header-fix"></div>

  <div class="card-header row align-center justify-between gap-16 padding-32">
    <div class="col flex-1 gap-8">
      <p class="body-m color-tertiary">
        {timeline}
        {isCurrent && <span class="tag color-primary">Now</span>}
      </p>

      <h4>
        {company.data.name} - {title}
      </h4>
    </div>

    <a
      class:list={[!company.data.href && "null"]}
      href={company.data.href}
      rel="noopener noreferrer"
      target="_blank"
    >
      <Image
        class="icon"
        src={logo()}
        width={42}
        densities={[1.5, 2, 3]}
        alt={`${company} logo`}
        loading="eager"
      />

      {company.data.href && <Svg d={SVG_ARROW} />}
    </a>
  </div>
</div>

<style>
  p,
  h4 {
    text-align: start;
  }

  .card-header-wrapper {
    z-index: 1;
    position: sticky;
    top: 16px;
    border-radius: 0 0 32px 32px;
  }

  .card-header {
    border-radius: 32px;
    background-color: var(--surface-hi-fx);
    backdrop-filter: blur(10px);
    transition: background-color 0.2s var(--bezier);
  }

  .card-header-fix {
    position: absolute;
    top: -16px;
    left: 0;
    width: 100%;
    height: calc(16px + 32px);
    background-color: var(--background);
    transition: background-color 0.2s var(--bezier);
  }

  .chip-current {
    color: var(--accent);
  }

  a {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  a img {
    border-radius: 9px;
    outline-style: solid;
    outline-width: 1px;
    outline-color: var(--outline);
    outline-offset: 3px;
    transition: all 0.2s var(--bezier);
  }
  a:hover img {
    outline-color: var(--accent);
  }

  a.null:hover img {
    outline-color: var(--outline);
  }

  a svg {
    position: absolute;
    top: -10px;
    right: -10px;
    width: 8px;
    height: 8px;
    stroke: var(--on-surface-var-2);
  }

  a:hover svg {
    transform: translate(2px, -2px);
    stroke: var(--accent);
  }
</style>
