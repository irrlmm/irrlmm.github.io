---
import Svg from "./Svg.astro";

interface Props {
  cards: {
    title: string;
    description: string;
    icon: string;
    chips: string[];
  }[];
}

const { cards } = Astro.props;
---

<ul class="cards">
  {
    cards.map((card) => (
      <li
        class="id-card row gap-32"
        style={`transform: rotate(${(Math.random() * 2 - 1).toFixed(2)}deg)`}
      >
        <div class="col gap-16">
          <div class="col gap-4">
            <h3>{card.title}</h3>
            <p class="body-s color-secondary">{card.description}</p>
          </div>

          <ul class="chips row gap-8">
            {card.chips.map((chip) => (
              <li class="chip">
                <span class="body-s">{chip}</span>
              </li>
            ))}
          </ul>
        </div>
      </li>
    ))
  }
</ul>

<style>
  .id-card {
    position: relative;
    padding: 32px;
    border-radius: 40px;
    background-color: var(--background);
    border: solid 1px var(--outline);
    transition: all 0.33s var(--bezier);
  }

  .id-card:hover {
    z-index: 1;
    transform: rotate(0deg) scale(1.01) !important;
    border: solid 1px var(--accent);
  }

  .id-card svg {
    width: 48px;
    height: 48px;
    stroke: var(--on-surface-var-2);
  }

  .id-card:hover svg {
    stroke: var(--accent);
  }

  .chips {
    flex: 1;
    flex-wrap: wrap;
  }

  .id-card:hover .chip {
    background-color: var(--accent);
  }

  .chip {
    display: inline-flex;
    align-items: center;
    height: 32px;
    background-color: var(--surface);
    border-radius: 16px;
    padding: 0 16px;
    transition: all 0.2s var(--bezier);
  }

  .chip span {
    font-weight: 500;
  }
  .id-card:hover .chip span {
    color: var(--on-accent);
  }
</style>
