---
import Separator from "../components/Separator.astro";
import MainLayout from "../layouts/MainLayout.astro";
import AnimatedLead from "../components/AnimatedLead.astro";
import Footer from "../components/Footer.astro";
import TitleWrapper from "../components/TitleWrapper.astro";
import AchievementStack from "../components/AchievementStack/AchievementStack";
import FactStackAstro from "../components/FactStack/index.astro";
import { getEntry } from "astro:content";
import AnimatedChecklist from "../components/AnimatedChecklist";
import Values from "../components/Values.astro";
import CardSeparator from "../components/CardSeparator.astro";
import Image from "astro/components/Image.astro";
import getImage from "../helpers/getImage";
import QuestionStack from "../components/QuestionStack";

const about = await getEntry("page:about", "about");

if (!about) {
  throw Error("No data!");
}
---

<MainLayout hasHeader={true}>
  <Image
    class="hero-image"
    widths={[1024, 1536, 2048]}
    width="768"
    layout="responsive"
    loading="eager"
    fit="contain"
    alt="Cover image"
    src={getImage("/src/assets/ishigs/grid-test.svg")()}
  />

  <div class="main-card col gap-32 padding-32">
    <TitleWrapper title={about.data.title} />

    <AnimatedLead lines={about.data.lead} addSpaceBetween />

    <CardSeparator />

    <Values values={about.data.overview} />
  </div>

  <div class="wrapper">
    {
      about.data.sections.map(async (s) => {
        if (s.separator) {
          return <Separator isDashed />;
        }

        return (
          <section class="col gap-48">
            <div class="col gap-32">
              {s.title && <h2>{s.title}</h2>}

              {s.lines && <AnimatedLead lines={s.lines} addSpaceBetween />}
            </div>

            {s.values && <Values values={s.values} />}

            {s.checklist && (
              <AnimatedChecklist client:idle list={s.checklist} />
            )}

            {s.cards && (
              <div class="col gap-16">
                {/* <span class="body-l color-tertiary">
                  {(await getEntry("meta:tag", "cards"))?.data.label}
                </span> */}

                <AchievementStack client:idle cards={s.cards} />
              </div>
            )}

            {s.facts && <FactStackAstro facts={s.facts} />}

            {s.questions && (
              <div class="col gap-16">
                {/* <span class="body-m color-tertiary">
                  {(await getEntry("meta:tag", "quest"))?.data.label}
                </span> */}

                <QuestionStack client:load questions={s.questions} />
              </div>
            )}
          </section>
        );
      })
    }

    <Separator />

    <Footer />
  </div>
</MainLayout>

<style>
  .hero-image {
    animation: appear-with-scale 0.66s var(--bezier) 0.1s both;
  }

  .main-card {
    position: relative;
    width: 100%;
    max-width: calc(576px + 64px);
    background-color: var(--surface-hi);
    border-radius: 32px;
    animation: appear-with-scale 0.66s var(--bezier) 0.2s both;
    transform-origin: top center;
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    max-width: 576px;
    gap: 64px;
  }

  video {
    width: 100%;
    max-width: 768px;
    aspect-ratio: 21/9;
    background-color: var(--surface-lo);
    border-radius: 48px;
    animation: appear-with-scale 0.66s var(--bezier) 0.1s both;
  }

  h2 {
    animation: appear 0.33s var(--bezier) 0.2s both;
  }

  .profile-cover {
    display: grid;
    gap: 8px;
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .profile-cover img {
    width: 100%;
    aspect-ratio: 1/1;
    border-radius: 25%;
  }
</style>
