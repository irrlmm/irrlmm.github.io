---
import Separator from "../components/Separator.astro";
import MainLayout from "../layouts/MainLayout.astro";
import AnimatedLead from "../components/AnimatedLead.astro";
import Footer from "../components/Footer.astro";
import TitleWrapper from "../components/TitleWrapper.astro";
import AchievementStack from "../components/AchievementStack/AchievementStack";
import FactStackAstro from "../components/FactStack/index.astro";
import { getEntry } from "astro:content";
import AnimatedChecklist from "../components/AnimatedChecklist";
import Values from "../components/Values.astro";
import CardSeparator from "../components/CardSeparator.astro";
import Image from "astro/components/Image.astro";
import getImage from "../helpers/getImage";
import QuestionStack from "../components/QuestionStack";

const about = await getEntry("page:about", "about");

const person = await getEntry("meta:person", "me");

if (!about || !person) {
  throw Error("No data!");
}

const birthDate = new Date(person.data.birthDate);
const now = new Date(Date.now());

const age = now.getFullYear() - birthDate.getFullYear();
const isBirthdayPassed =
  now.getMonth() > birthDate.getMonth() ||
  (now.getMonth() === birthDate.getMonth() &&
    now.getDate() >= birthDate.getDate());

const fullYears = isBirthdayPassed ? age : age - 1;
---

<MainLayout hasHeader={true}>
  <Image
    class="hero-image"
    widths={[768, 1536]}
    layout="responsive"
    width={768}
    loading="eager"
    alt="Cover image"
    src={getImage(person.data.avatar)()}
  />

  <div class="main-card col gap-32 padding-32">
    <TitleWrapper title={about.data.title} />

    <AnimatedLead lines={about.data.lead} addSpaceBetween />

    <CardSeparator />

    <Values
      values={[
        { label: "Age", value: fullYears.toString() },
        ...about.data.overview,
      ]}
    />
  </div>

  <div class="wrapper">
    <Separator isDashed />

    {
      about.data.sections.map(async (s) => {
        if (s.separator) {
          return <Separator isDashed />;
        }

        return (
          <section>
            <div class="text-column">
              {s.questions && (
                <span class="tag body-l">
                  {(await getEntry("meta:tag", "quest"))?.data.label}
                </span>
              )}

              {s.title && <h2>{s.title}</h2>}

              {s.lines && <AnimatedLead lines={s.lines} addSpaceBetween />}
            </div>

            <div class="content-column">
              {s.values && <Values values={s.values} />}

              {s.checklist && (
                <AnimatedChecklist client:idle list={s.checklist} />
              )}

              {s.cards && <AchievementStack client:idle cards={s.cards} />}

              {s.facts && <FactStackAstro facts={s.facts} />}

              {s.questions && (
                <QuestionStack client:load questions={s.questions} />
              )}
            </div>
          </section>
        );
      })
    }

    <Separator />

    <Footer />
  </div>
</MainLayout>

<style>
  .hero-image {
    border-radius: 32px;
    object-position: top center;
    aspect-ratio: 21/9;
    animation: appear-with-scale 0.66s var(--bezier) 0.1s both;
  }

  .main-card {
    position: relative;
    width: 100%;
    max-width: calc(576px + 64px);
    background-color: var(--surface-hi);
    border-radius: 32px;
    animation: appear-with-scale 0.66s var(--bezier) 0.2s both;
    transform-origin: top center;
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    width: 100%;
    max-width: 1136px;
    gap: 80px;
  }

  section {
    display: flex;
    gap: 64px;
    align-items: center;
  }

  .text-column {
    flex: 0.75;
    display: flex;
    flex-direction: column;
    gap: 32px;
  }
  section:nth-of-type(even) .text-column {
    order: 1;
  }

  .content-column {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  h2 {
    animation: appear 0.33s var(--bezier) 0.2s both;
  }

  .profile-cover {
    display: grid;
    gap: 8px;
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .profile-cover img {
    width: 100%;
    aspect-ratio: 1/1;
    border-radius: 25%;
  }

  @media (min-width: 1024px) {
    h2 {
      font-size: 1.75rem;
    }
  }

  @media (max-width: 1023px) {
    .wrapper {
      max-width: 576px;
      gap: 64px;
    }

    section {
      flex-direction: column;
      gap: 48px;
      align-items: initial;
    }

    section:nth-of-type(even) .text-column {
      order: initial;
    }
  }
</style>
