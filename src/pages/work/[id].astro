---
import { type CollectionEntry, getCollection } from "astro:content";
import { Image } from "astro:assets";
import MainLayout from "../../layouts/MainLayout.astro";
import WorkCard from "../../components/Work/WorkCard.astro";
import Separator from "../../components/Separator.astro";
import Footer from "../../components/Footer.astro";
import AnimatedLead from "../../components/AnimatedLead.astro";
import Values from "../../components/Values.astro";
import getImage from "../../helpers/getImage";
import FactStackAstro from "../../components/FactStack/index.astro";

export async function getStaticPaths() {
  const posts = await getCollection("work");
  return posts.map((post) => ({
    params: { id: post.id },
    props: post,
  }));
}

type Props = CollectionEntry<"work">;

const post = Astro.props;
---

<MainLayout hasHeader>
  <Image
    class="image"
    widths={[1024, 1536, 2048]}
    width="768"
    layout="responsive"
    loading="eager"
    fit="contain"
    src={getImage(post.data.coverImage)()}
    alt={post.data.title}
  />

  <WorkCard data={post.data} />

  {
    post.data.sections.map((s, i) => {
      if (s.separator) {
        return <Separator isDashed />;
      }

      if (s.image) {
        return (
          <Image
            class="image"
            widths={[1024, 1536, 2048]}
            width="768"
            layout="responsive"
            loading="eager"
            fit="contain"
            src={getImage(s.image)()}
            alt={post.data.title}
          />
        );
      }

      return (
        <div class="wrapper">
          <section class="col gap-40">
            {s.title && <h2>{s.title}</h2>}

            {s.lines && <AnimatedLead lines={s.lines} addSpaceBetween />}

            {s.values && <Values values={s.values} />}

            {s.facts && <FactStackAstro facts={s.facts} />}
          </section>
        </div>
      );
    })
  }

  <div class="wrapper">
    <Separator />

    <Footer />
  </div>
</MainLayout>

<style>
  .image {
    animation: appear-with-scale 0.66s var(--bezier) 0.1s both;
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    gap: 64px;
    width: 100%;
    max-width: 640px;
  }
</style>
