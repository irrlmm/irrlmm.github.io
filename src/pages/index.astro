---
import Menu from "../components/Menu/Menu.astro";
import Separator from "../components/Separator.astro";
import MainLayout from "../layouts/MainLayout.astro";
import JobCardsList from "../components/Jobs/JobCardsList.astro";
import Values from "../components/Values.astro";
import Footer from "../components/Footer.astro";
import { MENU_ABOUT, MENU_CONTACT, MENU_WORK } from "../consts/ui/menu";
import { SCHEMA_PERSON_FULL } from "../consts/schemas";
import { getEntry } from "astro:content";
import { getEntries } from "astro:content";
import AnimatedLead from "../components/AnimatedLead.astro";
import { LINK_DRIBBBLE, LINK_LINKEDIN } from "../consts/ui/links";

const cv = await getEntry("page:cv", "cv");

if (!cv) {
  throw Error("No data found");
}

const jobs = await getEntries(cv.data.jobs);
const person = await getEntry("meta:person", cv.data.person.id);
const about = await getEntry("page:about", "about");

if (!person || !jobs || !about) {
  throw Error("no data");
}

const birthDate = new Date(person.data.birthDate);
const now = new Date(Date.now());

const age = now.getFullYear() - birthDate.getFullYear();
const isBirthdayPassed =
  now.getMonth() > birthDate.getMonth() ||
  (now.getMonth() === birthDate.getMonth() &&
    now.getDate() >= birthDate.getDate());

const fullYears = isBirthdayPassed ? age : age - 1;
---

<MainLayout hasHeader schema={SCHEMA_PERSON_FULL}>
  <article>
    <section>
      <div class="col gap-32">
        <h1>{person.data.name}</h1>

        <AnimatedLead lines={about.data.lead} addSpaceBetween />
      </div>

      <Separator isDashed />

      <Values
        values={[
          { label: "Age", value: fullYears.toString() },
          {
            label: "Title",
            value:
              jobs.find((j) => j.id === person.data.currentJob.id)?.data
                .title || "",
          },
          ...cv.data.brief,
        ]}
      />

      <Values
        values={[
          {
            label: LINK_LINKEDIN.label,
            href: LINK_LINKEDIN.href,
            value: "Igor Lemeshkin",
          },
          {
            label: LINK_DRIBBBLE.label,
            href: LINK_DRIBBBLE.href,
            value: "irrlmm",
          },
        ]}
      />

      <Separator isDashed />
    </section>

    <section class="wide-section">
      <JobCardsList jobs={jobs} />
    </section>

    <Separator isDashed />

    <section>
      <section class="col gap-48">
        <h2>Skills</h2>
        <Values values={cv.data.skills} />
      </section>

      <Separator isDashed />

      <section class="col gap-48">
        <h2>Education</h2>
        <Values values={cv.data.education} />
      </section>

      <Separator isDashed />

      <section class="col gap-64">
        <h2>Hackathons</h2>

        {
          cv.data.competitions.map((c) => (
            <div class="col gap-32">
              <h3>{c.title}</h3>
              <Values values={c.values} />
            </div>
          ))
        }

        <Separator isDashed />

        <Menu options={[MENU_CONTACT, MENU_WORK, MENU_ABOUT]} isList={true} />
      </section>
    </section>
  </article>

  <Separator />

  <Footer />
</MainLayout>

<style>
  article {
    width: 100%;
    padding: 160px 32px;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 64px;
  }

  .centered {
    text-align: center;
  }

  .hero-section {
    width: 100%;
    padding: 128px;
    display: flex;
    gap: 64px;
    align-items: center;
    justify-content: center;
    border: solid 1px var(--outline);
    border-radius: 32px;
  }

  h1 {
    font-size: var(--font-size-4xl);
    animation: appear 0.33s var(--bezier) 0.15s both;
  }

  section {
    width: 100%;
    max-width: 576px;
    display: flex;
    flex-direction: column;
    gap: 64px;
  }

  .wide-section {
    width: 100%;
    max-width: calc(576px + 64px);
    display: flex;
    flex-direction: column;
    gap: 64px;
  }

  h2 {
    animation: appear 0.33s var(--bezier) 0.2s both;
  }
</style>
