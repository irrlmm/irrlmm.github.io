---
import MainLayout from "../layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import PostsList from "../components/Posts/PostsList.astro";
import ResumeOverview from "../components/ResumeOverview.astro";
import FactStack from "../components/FactStack";
import Belt from "../components/Belt";
import Hero from "../components/Hero.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import TestStack from "../components/TestStack";
import { TEST_COLLABORATOR_TYPE } from "../consts/tests/collaboratorType";
import { FACTS_INTRO } from "../consts/facts/introFacts";

const posts = (await getCollection("work")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

if (!posts) {
  throw Error("no posts!");
}
---

<MainLayout>
  <article class="col align-start">
    <Header />

    <Hero />

    <section>
      <FactStack client:load facts={FACTS_INTRO} />
    </section>

    <Belt client:load text="Available for product design roles" />

    <section>
      <ResumeOverview
        values={[
          { label: "Experience", value: "8+ years" },
          {
            label: "Works at",
            value: "iMusician",
            href: "https://imusician.pro",
          },
          {
            label: "Lore",
            value: "/undefined",
            href: "/undefined",
            internal: true,
          },
          {
            label: "LinkedIn",
            value: "Igor L.",
            href: "https://www.linkedin.com/in/irrlmm",
          },
          {
            label: "Dribbble",
            value: "irrlmm",
            href: "https://www.dribbble.com/irrlmm",
          },
          {
            label: "Email",
            value: "igorlem@icloud.com",
            href: "mailto:igorlem@icloud.com",
          },
        ]}
      />
    </section>

    <Belt client:load text="The work is mysterious and important" />

    <PostsList posts={posts} />

    <Belt client:load text="This page is not just about Igor" />

    <section>
      <TestStack client:load test={TEST_COLLABORATOR_TYPE} />
    </section>

    <Footer />
  </article>
</MainLayout>

<style>
  article {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: var(--unit-2xl) 0;
    gap: var(--unit-2xl);
  }

  p {
    vertical-align: middle;
  }

  section {
    display: flex;
    width: 100%;
    max-width: calc(var(--unit-m) * 22);
    padding: 0 var(--unit-m);
  }

  section.wide {
    max-width: initial;
    padding: 0;
  }
</style>
